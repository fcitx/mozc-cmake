cmake_minimum_required(VERSION 3.12)
project(mozc)

find_package(Fcitx5Core REQUIRED)
find_package(PkgConfig REQUIRED)
pkg_check_modules(Fcitx5Module REQUIRED "Fcitx5Module" IMPORTED_TARGET)
find_package(absl REQUIRED CONFIG)
find_package(Protobuf REQUIRED CONFIG)
find_package(Python3 REQUIRED COMPONENTS Interpreter)
find_package(Qt6 REQUIRED COMPONENTS Gui Widgets)

include(cmake/Macros.cmake)

include(GNUInstallDirs)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(CMAKE_CXX_FLAGS "-funsigned-char ${CMAKE_CXX_FLAGS}")
set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined -Wl,--as-needed ${CMAKE_SHARED_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "-Wl,--no-undefined -Wl,--as-needed ${CMAKE_MODULE_LINKER_FLAGS}")
add_definitions(-DMOZC_BUILD)
set(MOZC_SOURCE_DIR ${PROJECT_SOURCE_DIR}/mozc/src)

include_directories(mozc/src)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(MOZC_LIBRARY_TYPE STATIC)
# set(MOZC_LIBRARY_TYPE SHARED) # Uncomment to test dependency and missing symbols.

option(ENABLE_SERVER "Build Fcitx 5 Mozc with server" On)
option(BUILD_SERVER "Build mozc_server" On)
option(BUILD_TOOL "Build mozc_tool" On)
option(BUILD_FCITX "Build fcitx5-mozc" On)

add_subdirectory(protocol)
add_subdirectory(base)
add_subdirectory(config)
add_subdirectory(composer)
add_subdirectory(converter)
add_subdirectory(dictionary)
add_subdirectory(data_manager)
add_subdirectory(rewriter)
add_subdirectory(storage)
add_subdirectory(usage_stats)
add_subdirectory(ipc)
add_subdirectory(client)
add_subdirectory(transliteration)
add_subdirectory(session)
add_subdirectory(prediction)
add_subdirectory(engine)

if (BUILD_TOOL)
add_subdirectory(gui)
endif()

if (BUILD_SERVER AND ENABLE_SERVER)
add_subdirectory(server)
endif()

if (BUILD_FCITX)
add_subdirectory(fcitx)
endif()
